{"version":3,"sources":["@api/api.ts","@api/picture-api.ts","@store/pictures/slice.ts","@components/AppBar/SearchBar/SearchBar.tsx","@components/AppBar/AppBar.tsx","@store/pictures/selectors.ts","@components/ImageGallery/ImageGallery.tsx","@components/Modal/Modal.tsx","@components/UI/LoadingPage/LoadingPage.tsx","#/App.tsx","@store/index.ts","configureStore.ts","@themes/theme.ts","reportWebVitals.ts","index.tsx","@components/Modal/Modal.module.css"],"names":["instance","axios","create","baseURL","pictureAPI","pictureSearch","page","get","waitforme","milisec","Promise","resolve","setTimeout","picturesTC","createAsyncThunk","param","thunkAPI","a","dispatch","setLoading","res","data","rejectWithValue","response","slice","createSlice","name","initialState","total","totalHits","hits","loading","largeImageURL","tags","reducers","state","action","payload","incrementPage","setPictureSearch","setImageData","clearImageData","extraReducers","builder","addCase","fulfilled","push","picturesReducer","reducer","actions","useStyles","makeStyles","theme","createStyles","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","SearchBar","classes","useDispatch","React","useState","searchValue","setSearchValue","className","onSubmit","e","preventDefault","InputBase","placeholder","root","input","inputProps","value","onChange","target","autoFocus","grow","flexGrow","menuButton","title","sectionDesktop","sectionMobile","PrimarySearchAppBar","AppBar","Container","maxWidth","Toolbar","Typography","variant","noWrap","picturesSelector","pictures","flexWrap","overflow","background","paper","gridList","transform","titleBar","icon","ImageGallery","picturesHits","useSelector","useTheme","screenExtraLarge","useMediaQuery","only","screenLarge","screenMedium","screenSmall","GridList","cellHeight","cols","map","tile","GridListTile","rows","role","src","webformatURL","alt","onClick","GridListTileBar","titlePosition","actionIcon","IconButton","aria-label","actionPosition","id","modalRoot","document","querySelector","MyModal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","event","code","createPortal","s","Overlay","currentTarget","onKeyPress","tabIndex","Modal","backdrop","zIndex","drawer","LoadingPage","Backdrop","open","CircularProgress","AppContainer","picturesLoading","scrollTo","top","documentElement","scrollHeight","behavior","Box","mb","length","my","textAlign","Button","rootReducer","combineReducers","logger","createLogger","collapsed","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","devTools","persistor","persistStore","createMuiTheme","typography","fontFamily","fontSize","primary","light","main","dark","contrastText","secondary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootEl","getElementById","render","StrictMode","ThemeProvider","CssBaseline","module","exports"],"mappings":"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","file":"static/js/main.73a048d0.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '21006895-bfaaa89652a3d7d5175478097';\n\nexport const instance = axios.create({\n  baseURL: 'https://pixabay.com/api',\n});\n","import { API_KEY, instance } from './api';\n\nexport const pictureAPI = {\n  fetchImages(pictureSearch: string, page: number) {\n    return instance.get(\n      `/?key=${API_KEY}&q=${pictureSearch}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`,\n    );\n  },\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { pictureAPI } from '../../@api/picture-api';\nimport { PicturesDataType } from '../../@types';\n\nconst picturesInitialState = {\n  data: {\n    total: 0,\n    totalHits: 0,\n    hits: [],\n  } as PicturesDataType,\n  loading: false,\n  page: 1,\n  pictureSearch: 'nature',\n  largeImageURL: '',\n  tags: '' as string,\n};\n\n// delay\nfunction waitforme(milisec: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve('');\n    }, milisec);\n  });\n}\n\nexport const picturesTC = createAsyncThunk(\n  'pictures/picturesTC',\n  async (param: { pictureSearch: string; page: number }, thunkAPI) => {\n    thunkAPI.dispatch(setLoading(true));\n    try {\n      await waitforme(1000);\n      const res = await pictureAPI.fetchImages(param.pictureSearch, param.page);\n      return { data: res.data };\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err.response.data);\n    } finally {\n      thunkAPI.dispatch(setLoading(false));\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'pictures',\n  initialState: picturesInitialState,\n  reducers: {\n    setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    incrementPage(state) {\n      state.page += 1;\n    },\n    setPictureSearch(state, action) {\n      state.data.hits = []; // clear\n      state.page = 1;\n      state.pictureSearch = action.payload;\n    },\n    setImageData(state, action) {\n      state.largeImageURL = action.payload.largeImageURL;\n      state.tags = action.payload.tags;\n    },\n    clearImageData(state) {\n      state.largeImageURL = '';\n      state.tags = '';\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(picturesTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        // state.data = action.payload.data;\n        state.data.total = action.payload.data.total;\n        state.data.totalHits = action.payload.data.totalHits;\n        state.data.hits.push(...action.payload.data.hits);\n      }\n    });\n  },\n});\n\nexport const picturesReducer = slice.reducer;\nexport const {\n  setLoading,\n  incrementPage,\n  setPictureSearch,\n  setImageData,\n  clearImageData,\n} = slice.actions;\n","// https://stackoverflow.com/questions/61528692/can-react-material-ui-inputbase-component-have-an-onsubmit-action\nimport React from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { useDispatch } from 'react-redux';\nimport { setPictureSearch } from '../../../@store/pictures/slice';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  // console.log(theme); // print mui global theme object\n  return {\n    ...createStyles({\n      search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(3),\n          width: 'auto',\n        },\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      inputRoot: {\n        color: 'inherit',\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n          width: '20ch',\n        },\n      },\n    }),\n  };\n});\n\nconst SearchBar: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(setPictureSearch(searchValue));\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <form className=\"App\" onSubmit={onSubmit}>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ 'aria-label': 'search' }}\n          // additional\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          autoFocus\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '@material-ui/core';\nimport SearchBar from './SearchBar';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  // console.log(theme); // print mui global theme object\n  return {\n    ...createStyles({\n      grow: {\n        flexGrow: 1,\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n          display: 'flex',\n        },\n      },\n      sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n          display: 'none',\n        },\n      },\n    }),\n  };\n});\n\nexport const PrimarySearchAppBar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"lg\">\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Pixabay Images\n            </Typography>\n            {/* search */}\n            <SearchBar />\n            <div className={classes.grow} />\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  );\n};\n","import { RootState } from '..';\n\nexport const picturesSelector = (state: RootState) => {\n  return state.pictures;\n};\n","// Responsive approach https://www.tilcode.com/react-media-query-hook-responsive-material-ui-gridlist/\nimport * as React from 'react';\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  makeStyles,\n  Theme,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { picturesSelector } from '../../@store/pictures/selectors';\nimport { setImageData } from '../../@store/pictures/slice';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 'auto',\n    height: 'auto',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  icon: {\n    color: 'white',\n  },\n}));\n\nexport const ImageGallery: React.FC = () => {\n  const dispatch = useDispatch();\n  const picturesData = useSelector(picturesSelector).data;\n  const picturesHits = picturesData.hits;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  //   RESPONSIVE HACK\n  const screenExtraLarge = useMediaQuery(theme.breakpoints.only('xl'));\n  const screenLarge = useMediaQuery(theme.breakpoints.only('lg'));\n  const screenMedium = useMediaQuery(theme.breakpoints.only('md'));\n  const screenSmall = useMediaQuery(theme.breakpoints.only('sm'));\n  const screenExtraSmall = useMediaQuery(theme.breakpoints.only('xs'));\n  const screenNarrow = useMediaQuery('(max-width:340px)');\n\n  const getScreenWidth = () => {\n    if (screenExtraLarge) {\n      return 5;\n    }\n    if (screenLarge) {\n      return 4;\n    }\n    if (screenMedium) {\n      return 3;\n    }\n    if (screenSmall) {\n      return 2;\n    }\n    if (screenExtraSmall) {\n      return 1;\n    }\n    if (screenNarrow) {\n      return 1;\n    }\n    return 1;\n  };\n  //   END of RESPONSIVE HACK\n\n  return (\n    <div className={classes.root}>\n      <GridList\n        cellHeight={260}\n        cols={getScreenWidth()}\n        spacing={1}\n        className={classes.gridList}\n      >\n        {picturesHits?.map((tile) => (\n          <GridListTile key={tile.id} cols={1} rows={1}>\n            <img\n              role=\"presentation\"\n              src={tile.webformatURL}\n              alt={tile.tags}\n              // alt=\"none\"\n              onClick={() => {\n                dispatch(\n                  setImageData({\n                    largeImageURL: tile.largeImageURL,\n                    tags: tile.tags,\n                  }),\n                );\n              }}\n            />\n            <GridListTileBar\n              title={tile.tags}\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label=\"star title\" className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default ImageGallery;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root') as Element;\n\nconst MyModal: React.FC<Props> = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = (event: IKeyboardEvent) => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const onKeyPressHandler = (event: IKeyboardEvent) => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = (event: React.MouseEvent<HTMLElement>) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={s.Overlay}\n      onClick={handleBackdropClick}\n      onKeyPress={onKeyPressHandler}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default MyModal;\n\ntype Props = {\n  onClose: () => void;\n};\n\ninterface IKeyboardEvent {\n  code: string;\n}\n","import React from 'react';\nimport { CircularProgress, Backdrop, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport const LoadingPage: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\nexport default LoadingPage;\n","import { Box, Button, Container } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PrimarySearchAppBar } from '../@components/AppBar/AppBar';\nimport ImageGallery from '../@components/ImageGallery';\nimport MyModal from '../@components/Modal';\nimport LoadingPage from '../@components/UI/LoadingPage';\nimport { picturesSelector } from '../@store/pictures/selectors';\nimport {\n  clearImageData,\n  incrementPage,\n  picturesTC,\n} from '../@store/pictures/slice';\n\nexport const AppContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const {\n    loading: picturesLoading,\n    page,\n    pictureSearch,\n    largeImageURL,\n    tags,\n    data: { hits },\n  } = useSelector(picturesSelector);\n\n  useEffect(() => {\n    dispatch(picturesTC({ pictureSearch, page }));\n  }, [dispatch, pictureSearch, page]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [hits]);\n\n  const toggleModal = () => {\n    dispatch(clearImageData());\n  };\n\n  const handleLoadMore = () => {\n    dispatch(incrementPage());\n  };\n\n  return (\n    <div className=\"App\">\n      <Box mb={2}>\n        <PrimarySearchAppBar />\n      </Box>\n      <Container maxWidth=\"lg\">\n        {picturesLoading && <LoadingPage />}\n        <ImageGallery />\n        {hits.length > 0 && (\n          <Box my={3} textAlign=\"center\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => handleLoadMore()}\n            >\n              Load more\n            </Button>\n          </Box>\n        )}\n      </Container>\n      {largeImageURL && (\n        <MyModal onClose={toggleModal}>\n          123\n          <img\n            src={largeImageURL}\n            // alt=\"something\"\n            alt={tags}\n          />\n        </MyModal>\n      )}\n    </div>\n  );\n};\n","import { combineReducers } from 'redux';\nimport { picturesReducer } from './pictures/slice';\n\nexport const rootReducer = combineReducers({\n  pictures: picturesReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import { createBrowserHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './@store/index';\n// export const history = createBrowserHistory();\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // blacklist: ['filter'], // will not be persisted\n  whitelist: ['filter'], // will be persisted\n};\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const middleware = [...getDefaultMiddleware(), logger];\n// https://github.com/rt2zz/redux-persist/issues/988#issuecomment-552242978\nconst middleware = [\n  ...getDefaultMiddleware({\n    // immutableCheck: true,\n    thunk: true,\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  // devTools: process.env.NODE_ENV === 'development',\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Open Sans\", sans-serif',\n    fontSize: 14,\n    // fontWeightLight: 300,\n    // fontWeightRegular: 400,\n    // fontWeightMedium: 500,\n  },\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { AppContainer } from './#/App';\nimport { store, persistor } from './configureStore';\nimport LoadingPage from './@components/UI/LoadingPage';\nimport { theme } from './@themes/theme';\nimport reportWebVitals from './reportWebVitals';\n\n// All styles\nimport './@assets/styles/index.scss';\n\nconst rootEl = document.getElementById('root');\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<LoadingPage />} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <AppContainer />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  rootEl,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__sFvQM\",\"Modal\":\"Modal_Modal__1830P\"};"],"sourceRoot":""}