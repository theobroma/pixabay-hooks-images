{"version":3,"sources":["@api/api.ts","@api/picture-api.ts","@store/pictures/slice.ts","@components/AppBar/SearchBar/SearchBar.tsx","@components/AppBar/AppBar.tsx","@store/pictures/selectors.ts","@components/ImageGallery/ImageGallery.tsx","@components/Modal/Modal.tsx","@components/UI/LoadingPage/LoadingPage.tsx","#/App.tsx","@api/forecast-api.ts","@store/forecast/slice.ts","@api/currentWeather-api.ts","@store/current-weather/slice.ts","@api/search-api.ts","@store/search/slice.ts","@store/index.ts","configureStore.ts","@themes/theme.ts","reportWebVitals.ts","index.tsx","@components/Modal/Modal.module.css"],"names":["API_KEY","instance","axios","create","baseURL","pictureAPI","pictureSearch","page","get","waitforme","milisec","Promise","resolve","setTimeout","picturesTC","createAsyncThunk","param","thunkAPI","a","dispatch","setLoading","res","data","rejectWithValue","response","slice","createSlice","name","initialState","total","totalHits","hits","loading","largeImageURL","tags","reducers","state","action","payload","incrementPage","setPictureSearch","setImageData","clearImageData","extraReducers","builder","addCase","fulfilled","push","picturesReducer","reducer","actions","useStyles","makeStyles","theme","createStyles","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","SearchBar","classes","useDispatch","React","useState","searchValue","setSearchValue","className","onSubmit","e","preventDefault","InputBase","placeholder","root","input","inputProps","value","onChange","target","grow","flexGrow","menuButton","title","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Container","maxWidth","Toolbar","edge","Typography","variant","noWrap","picturesSelector","pictures","flexWrap","overflow","background","paper","gridList","transform","titleBar","icon","ImageGallery","props","picturesHits","useSelector","useTheme","screenExtraLarge","useMediaQuery","only","screenLarge","screenMedium","screenSmall","GridList","cellHeight","cols","map","tile","GridListTile","rows","role","src","webformatURL","alt","GridListTileBar","titlePosition","actionIcon","actionPosition","modalRoot","document","querySelector","MyModal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","s","Overlay","onKeyPress","tabIndex","Modal","backdrop","zIndex","drawer","LoadingPage","Backdrop","CircularProgress","AppContainer","picturesLoading","Box","mb","my","textAlign","Button","forecastAPI","days","lat","lon","getForecastTC","forecastday","forecast","forecastReducer","currentWeatherApi","getCurrentWeatherTC","undf","navigator","geolocation","getCurrentPosition","userCoordinatesAC","coords","latitude","longitude","setLocationAC","location","currentWeather","current","currentWeatherReducer","searchAPI","place","searchTC","clearData","searchReducer","rootReducer","combineReducers","logger","createLogger","collapsed","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","devTools","persistor","persistStore","createMuiTheme","typography","fontFamily","fontSize","primary","light","main","dark","contrastText","secondary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootEl","getElementById","render","StrictMode","ThemeProvider","CssBaseline","module","exports"],"mappings":"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","file":"static/js/main.21effac1.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '21006895-bfaaa89652a3d7d5175478097';\n\nexport const instance = axios.create({\n  baseURL: 'https://pixabay.com/api',\n});\n","import { API_KEY, instance } from './api';\n\nexport const pictureAPI = {\n  fetchImages(pictureSearch: string, page: number) {\n    return instance.get(\n      `/?key=${API_KEY}&q=${pictureSearch}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`,\n    );\n  },\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { pictureAPI } from '../../@api/picture-api';\nimport { PicturesDataType } from '../../@types';\n\nconst picturesInitialState = {\n  data: {\n    total: 0,\n    totalHits: 0,\n    hits: [],\n  } as PicturesDataType,\n  loading: false,\n  page: 1,\n  pictureSearch: 'nature',\n  largeImageURL: '',\n  // largeImageURL:\n  //   'https://pixabay.com/get/g6c5abb332425843c9179b22435f354f8196863905e6c842e4d399527db510613a17a959eec3cdb72db80a2eab0d99b61aecca3a423e31932f5c2d39f01e39273_1280.jpg',\n  tags: '' as string,\n};\n\n// delay\nfunction waitforme(milisec: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve('');\n    }, milisec);\n  });\n}\n\nexport const picturesTC = createAsyncThunk(\n  'pictures/picturesTC',\n  async (param: { pictureSearch: string; page: number }, thunkAPI) => {\n    thunkAPI.dispatch(setLoading(true));\n    try {\n      await waitforme(1000);\n      const res = await pictureAPI.fetchImages(param.pictureSearch, param.page);\n      return { data: res.data };\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err.response.data);\n    } finally {\n      thunkAPI.dispatch(setLoading(false));\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'pictures',\n  initialState: picturesInitialState,\n  reducers: {\n    setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    incrementPage(state) {\n      state.page += 1;\n    },\n    setPictureSearch(state, action) {\n      state.data.hits = []; // clear\n      state.page = 1;\n      state.pictureSearch = action.payload;\n    },\n    setImageData(state, action) {\n      state.largeImageURL = action.payload.largeImageURL;\n      state.tags = action.payload.tags;\n    },\n    clearImageData(state) {\n      state.largeImageURL = '';\n      state.tags = '';\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(picturesTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        // state.data = action.payload.data;\n        state.data.total = action.payload.data.total;\n        state.data.totalHits = action.payload.data.totalHits;\n        state.data.hits.push(...action.payload.data.hits);\n      }\n    });\n  },\n});\n\nexport const picturesReducer = slice.reducer;\nexport const {\n  setLoading,\n  incrementPage,\n  setPictureSearch,\n  setImageData,\n  clearImageData,\n} = slice.actions;\n","// https://stackoverflow.com/questions/61528692/can-react-material-ui-inputbase-component-have-an-onsubmit-action\nimport React from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { useDispatch } from 'react-redux';\nimport { setPictureSearch } from '../../../@store/pictures/slice';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  // console.log(theme); // print mui global theme object\n  return {\n    ...createStyles({\n      search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(3),\n          width: 'auto',\n        },\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      inputRoot: {\n        color: 'inherit',\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n          width: '20ch',\n        },\n      },\n    }),\n  };\n});\n\nconst SearchBar: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    dispatch(setPictureSearch(searchValue));\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <form className=\"App\" onSubmit={onSubmit}>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ 'aria-label': 'search' }}\n          // additional\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { Container } from '@material-ui/core';\nimport SearchBar from './SearchBar';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  // console.log(theme); // print mui global theme object\n  return {\n    ...createStyles({\n      grow: {\n        flexGrow: 1,\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n          display: 'flex',\n        },\n      },\n      sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n          display: 'none',\n        },\n      },\n    }),\n  };\n});\n\nexport const PrimarySearchAppBar: React.FC = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [\n    mobileMoreAnchorEl,\n    setMobileMoreAnchorEl,\n  ] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"lg\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Pixabay Images\n            </Typography>\n            {/* search */}\n            <SearchBar />\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n};\n","import { RootState } from '..';\n\nexport const picturesSelector = (state: RootState) => {\n  return state.pictures;\n};\n","// Responsive approach https://www.tilcode.com/react-media-query-hook-responsive-material-ui-gridlist/\n// const ImageGallery = ({ picture, setImageData }) => {\n//   return (\n//     <ul className={s.ImageGallery}>\n//       {picture.map(({ webformatURL, largeImageURL, tags }, index) => (\n//         <ImageGalleryItem\n//           onSetImageData={setImageData}\n//           key={index}\n//           src={webformatURL}\n//           largeImageURL={largeImageURL}\n//           tags={tags}\n//         />\n//       ))}\n//     </ul>\n//   );\n// };\n// export default ImageGallery;\nimport * as React from 'react';\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  makeStyles,\n  Theme,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { picturesSelector } from '../../@store/pictures/selectors';\nimport { setImageData } from '../../@store/pictures/slice';\n// import ImageGalleryItem from './ImageGalleryItem';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 'auto',\n    height: 'auto',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  icon: {\n    color: 'white',\n  },\n}));\n\nexport const ImageGallery: React.FC = (props: any) => {\n  const dispatch = useDispatch();\n  const picturesData = useSelector(picturesSelector).data;\n  const picturesHits = picturesData.hits;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  //   RESPONSIVE HACK\n  const screenExtraLarge = useMediaQuery(theme.breakpoints.only('xl'));\n  const screenLarge = useMediaQuery(theme.breakpoints.only('lg'));\n  const screenMedium = useMediaQuery(theme.breakpoints.only('md'));\n  const screenSmall = useMediaQuery(theme.breakpoints.only('sm'));\n  const screenExtraSmall = useMediaQuery(theme.breakpoints.only('xs'));\n  const screenNarrow = useMediaQuery('(max-width:340px)');\n\n  const getScreenWidth = () => {\n    if (screenExtraLarge) {\n      return 5;\n    }\n    if (screenLarge) {\n      return 4;\n    }\n    if (screenMedium) {\n      return 3;\n    }\n    if (screenSmall) {\n      return 2;\n    }\n    if (screenExtraSmall) {\n      return 1;\n    }\n    if (screenNarrow) {\n      return 1;\n    }\n    return 1;\n  };\n  //   END of RESPONSIVE HACK\n\n  return (\n    <div className={classes.root}>\n      <GridList\n        cellHeight={260}\n        cols={getScreenWidth()}\n        spacing={1}\n        className={classes.gridList}\n      >\n        {picturesHits?.map((tile) => (\n          <GridListTile key={tile.id} cols={1} rows={1}>\n            <img\n              role=\"presentation\"\n              src={tile.webformatURL}\n              alt={tile.tags}\n              // alt=\"none\"\n              onClick={() => {\n                dispatch(\n                  setImageData({\n                    largeImageURL: tile.largeImageURL,\n                    tags: tile.tags,\n                  }),\n                );\n              }}\n            />\n            <GridListTileBar\n              title=\"title\"\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label=\"star title\" className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default ImageGallery;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root') as Element;\n\nconst MyModal: React.FC<Props> = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = (event: IKeyboardEvent) => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const onKeyPressHandler = (event: IKeyboardEvent) => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={s.Overlay}\n      onClick={handleBackdropClick}\n      onKeyPress={onKeyPressHandler}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default MyModal;\n\ntype Props = {\n  onClose: () => void;\n};\n\ninterface IKeyboardEvent {\n  code: string;\n}\n","import React from 'react';\nimport { CircularProgress, Backdrop, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport const LoadingPage: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\nexport default LoadingPage;\n","import { Box, Button, Container } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PrimarySearchAppBar } from '../@components/AppBar/AppBar';\nimport ImageGallery from '../@components/ImageGallery';\nimport MyModal from '../@components/Modal';\nimport LoadingPage from '../@components/UI/LoadingPage';\nimport { picturesSelector } from '../@store/pictures/selectors';\nimport {\n  clearImageData,\n  incrementPage,\n  picturesTC,\n} from '../@store/pictures/slice';\n\nexport const AppContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const {\n    loading: picturesLoading,\n    page,\n    pictureSearch,\n    largeImageURL,\n    tags,\n  } = useSelector(picturesSelector);\n\n  useEffect(() => {\n    dispatch(picturesTC({ pictureSearch, page }));\n  }, [dispatch, pictureSearch, page]);\n\n  const toggleModal = () => {\n    dispatch(clearImageData());\n  };\n\n  const handleLoadMore = () => {\n    dispatch(incrementPage());\n  };\n\n  return (\n    <div className=\"App\">\n      <Box mb={2}>\n        <PrimarySearchAppBar />\n      </Box>\n      <Container maxWidth=\"lg\">\n        {picturesLoading && <LoadingPage />}\n        <ImageGallery />\n        <Box my={3} textAlign=\"center\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLoadMore()}\n          >\n            Load more\n          </Button>\n        </Box>\n      </Container>\n      {largeImageURL && (\n        <MyModal onClose={toggleModal}>\n          123\n          <img\n            src={largeImageURL}\n            // alt=\"something\"\n            alt={tags}\n          />\n        </MyModal>\n      )}\n    </div>\n  );\n};\n","import {\n  LocationResponseType,\n  CurrentWeatherResponseType,\n  AstroResponseType,\n  DayResponseType,\n  HourResponseType,\n} from '../@types';\nimport { API_KEY, instance } from './api';\n\nexport const forecastAPI = {\n  dailyWeather(days: number, lat: number, lon: number) {\n    return instance.get<ForecastType>(\n      `/forecast.json?key=${API_KEY}&q=${lat},${lon}&days=${days}`,\n    );\n  },\n};\n\nexport type ForecastType = {\n  location: LocationResponseType;\n  current: CurrentWeatherResponseType;\n  forecast: ForecastDayInfoType;\n};\n\nexport type ForecastDayInfoType = {\n  forecastday: Array<ForecastdayResponseType>;\n};\n\nexport type ForecastdayResponseType = {\n  date: string;\n  day: DayResponseType;\n  astro: AstroResponseType;\n  hour: Array<HourResponseType>;\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { forecastAPI, ForecastdayResponseType } from '../../@api/forecast-api';\n\nconst forecastInitialState = {\n  forecastday: [] as Array<ForecastdayResponseType>,\n};\n\nexport const getForecastTC = createAsyncThunk(\n  'forecast/getForecast',\n  async (param: { days: number; lat: number; lon: number }, thunkAPI) => {\n    try {\n      const res = await forecastAPI.dailyWeather(\n        param.days,\n        param.lat,\n        param.lon,\n      );\n      return { forecastday: res.data.forecast.forecastday };\n    } catch (err) {\n      // Use `err.response.data` as `action.payload` for a `rejected` action,\n      // by explicitly returning it using the `rejectWithValue()` utility\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'forecast',\n  initialState: forecastInitialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getForecastTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.forecastday = action.payload.forecastday;\n      }\n    });\n  },\n});\n\nexport const forecastReducer = slice.reducer;\n","import { LocationResponseType, CurrentWeatherResponseType } from '../@types';\nimport { API_KEY, instance } from './api';\n\nexport const currentWeatherApi = {\n  currentWeather(lat: number, lon: number) {\n    return instance.get<CurrectWeatherType>(\n      `/current.json?key=${API_KEY}&q=${lat},${lon}`,\n    );\n  },\n};\n\nexport type CurrectWeatherType = {\n  location: LocationResponseType;\n  current: CurrentWeatherResponseType;\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { currentWeatherApi } from '../../@api/currentWeather-api';\nimport { CurrentWeatherResponseType, LocationResponseType } from '../../@types';\n\nconst currentWeatherInitialState = {\n  lat: 0, // lat: 51.5341714,\n  lon: 0, // lon: 33.3767724,\n  location: {} as LocationResponseType,\n  currentWeather: {} as CurrentWeatherResponseType,\n};\n\nexport const getUserCoordinatesTC = createAsyncThunk(\n  'currentWeather/getUserCoordinatesTC',\n  (undf, thunkAPI) => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      thunkAPI.dispatch(\n        userCoordinatesAC({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        }),\n      );\n    });\n  },\n);\n\nexport const getCurrentWeatherTC = createAsyncThunk(\n  'currentWeather/getCurrentWeather',\n  async (param: { lat: number; lon: number }, thunkAPI) => {\n    try {\n      const res = await currentWeatherApi.currentWeather(param.lat, param.lon);\n      thunkAPI.dispatch(setLocationAC(res.data.location));\n      return { currentWeather: res.data.current };\n    } catch (err) {\n      // Use `err.response.data` as `action.payload` for a `rejected` action,\n      // by explicitly returning it using the `rejectWithValue()` utility\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'currentWeather',\n  initialState: currentWeatherInitialState,\n  reducers: {\n    userCoordinatesAC(\n      state,\n      action: PayloadAction<{ lat: number; lon: number }>,\n    ) {\n      state.lat = action.payload.lat;\n      state.lon = action.payload.lon;\n    },\n    setLocationAC(state, action: PayloadAction<LocationResponseType>) {\n      state.location = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getCurrentWeatherTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.currentWeather = action.payload.currentWeather;\n      }\n    });\n  },\n});\n\nexport const currentWeatherReducer = slice.reducer;\nexport const { userCoordinatesAC, setLocationAC } = slice.actions;\n","import { searchPlaceResponseType } from '../@types';\nimport { API_KEY, instance } from './api';\n\nexport const searchAPI = {\n  place(place: string) {\n    return instance.get<searchPlaceResponseType[]>(\n      `/search.json?key=${API_KEY}&q=${place}`,\n    );\n  },\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { searchAPI } from '../../@api/search-api';\nimport { searchPlaceResponseType } from '../../@types';\n\nconst searchInitialState = {\n  data: [] as Array<searchPlaceResponseType>,\n};\n\nexport const searchTC = createAsyncThunk(\n  'search/searchTC',\n  async (place: string, thunkAPI) => {\n    try {\n      const res = await searchAPI.place(place);\n      return { data: res.data };\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'search',\n  initialState: searchInitialState,\n  reducers: {\n    clearData(state) {\n      state.data = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(searchTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.data = action.payload.data;\n      }\n    });\n  },\n});\n\nexport const searchReducer = slice.reducer;\nexport const { clearData: clearDataAC } = slice.actions;\n","import { combineReducers } from 'redux';\nimport { forecastReducer } from './forecast/slice';\nimport { currentWeatherReducer } from './current-weather/slice';\nimport { searchReducer } from './search/slice';\nimport { picturesReducer } from './pictures/slice';\n\nexport const rootReducer = combineReducers({\n  currentWeather: currentWeatherReducer,\n  forecast: forecastReducer,\n  pictures: picturesReducer,\n  search: searchReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import { createBrowserHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './@store/index';\n// export const history = createBrowserHistory();\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // blacklist: ['filter'], // will not be persisted\n  whitelist: ['filter'], // will be persisted\n};\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const middleware = [...getDefaultMiddleware(), logger];\n// https://github.com/rt2zz/redux-persist/issues/988#issuecomment-552242978\nconst middleware = [\n  ...getDefaultMiddleware({\n    // immutableCheck: true,\n    thunk: true,\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  // devTools: process.env.NODE_ENV === 'development',\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Open Sans\", sans-serif',\n    fontSize: 14,\n    // fontWeightLight: 300,\n    // fontWeightRegular: 400,\n    // fontWeightMedium: 500,\n  },\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { AppContainer } from './#/App';\nimport { store, persistor } from './configureStore';\nimport LoadingPage from './@components/UI/LoadingPage';\nimport { theme } from './@themes/theme';\nimport reportWebVitals from './reportWebVitals';\n\n// All styles\nimport './@assets/styles/index.scss';\n\n// Open Source typefaces\nimport 'typeface-roboto';\n\nconst rootEl = document.getElementById('root');\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<LoadingPage />} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <AppContainer />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  rootEl,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__sFvQM\",\"Modal\":\"Modal_Modal__1830P\"};"],"sourceRoot":""}