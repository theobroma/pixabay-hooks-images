{"version":3,"sources":["@components/AppBar/AppBar.tsx","@store/pictures/selectors.ts","@components/ImageGallery/ImageGallery.tsx","@components/UI/LoadingPage/LoadingPage.tsx","@api/api.ts","@api/picture-api.ts","@store/pictures/slice.ts","#/App.tsx","@api/forecast-api.ts","@store/forecast/slice.ts","@api/currentWeather-api.ts","@store/current-weather/slice.ts","@api/search-api.ts","@store/search/slice.ts","@store/index.ts","configureStore.ts","@themes/theme.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","Container","maxWidth","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","picturesSelector","state","pictures","flexWrap","overflow","background","paper","gridList","transform","titleBar","icon","ImageGallery","props","picturesHits","useSelector","data","hits","useTheme","screenExtraLarge","useMediaQuery","only","screenLarge","screenMedium","screenSmall","GridList","cellHeight","cols","map","tile","GridListTile","rows","src","webformatURL","alt","GridListTileBar","titlePosition","actionIcon","actionPosition","backdrop","zIndex","drawer","LoadingPage","Backdrop","CircularProgress","API_KEY","instance","axios","baseURL","pictureAPI","pictureSearch","page","get","waitforme","milisec","Promise","resolve","setTimeout","picturesTC","createAsyncThunk","param","thunkAPI","a","dispatch","setLoading","res","rejectWithValue","response","slice","createSlice","name","initialState","total","totalHits","loading","reducers","action","payload","incrementPage","extraReducers","builder","addCase","fulfilled","push","picturesReducer","reducer","actions","AppContainer","useDispatch","picturesLoading","useEffect","Box","mb","my","textAlign","Button","forecastAPI","days","lat","lon","getForecastTC","forecastday","forecast","forecastReducer","currentWeatherApi","getCurrentWeatherTC","undf","navigator","geolocation","getCurrentPosition","userCoordinatesAC","coords","latitude","longitude","setLocationAC","location","currentWeather","current","currentWeatherReducer","searchAPI","place","searchTC","clearData","searchReducer","rootReducer","combineReducers","logger","createLogger","collapsed","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","devTools","persistor","persistStore","createMuiTheme","typography","fontFamily","fontSize","primary","light","main","dark","contrastText","secondary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootEl","document","getElementById","render","StrictMode","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.81cbbb28.chunk.js","sourcesContent":["// import React from 'react';\n// import { makeStyles, AppBar, Toolbar, Typography } from '@material-ui/core';\n\n// const useStyles = makeStyles({\n//   root: {\n//     marginTop: 0,\n//     width: '100%',\n//     marginBottom: 16,\n//   },\n// });\n\n// export const SimpleAppBar: React.FC = (props) => {\n//   const classes = useStyles(props);\n//   return (\n//     <div className={classes.root}>\n//       <AppBar position=\"static\" color=\"primary\">\n//         <Toolbar>\n//           <Typography variant=\"h6\">Pixabay Images</Typography>\n//         </Toolbar>\n//       </AppBar>\n//     </div>\n//   );\n// };\n\nimport React from 'react';\nimport {\n  fade,\n  makeStyles,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { Container } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nexport const PrimarySearchAppBar: React.FC = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [\n    mobileMoreAnchorEl,\n    setMobileMoreAnchorEl,\n  ] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"lg\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Pixabay Images\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n};\n","import { RootState } from '..';\n\nexport const picturesSelector = (state: RootState) => {\n  return state.pictures;\n};\n","// Responsive approach https://www.tilcode.com/react-media-query-hook-responsive-material-ui-gridlist/\n// const ImageGallery = ({ picture, setImageData }) => {\n//   return (\n//     <ul className={s.ImageGallery}>\n//       {picture.map(({ webformatURL, largeImageURL, tags }, index) => (\n//         <ImageGalleryItem\n//           onSetImageData={setImageData}\n//           key={index}\n//           src={webformatURL}\n//           largeImageURL={largeImageURL}\n//           tags={tags}\n//         />\n//       ))}\n//     </ul>\n//   );\n// };\n// export default ImageGallery;\nimport * as React from 'react';\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  makeStyles,\n  Theme,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { picturesSelector } from '../../@store/pictures/selectors';\n// import ImageGalleryItem from './ImageGalleryItem';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 'auto',\n    height: 'auto',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  icon: {\n    color: 'white',\n  },\n}));\n\nexport const ImageGallery: React.FC = (props: any) => {\n  const picturesData = useSelector(picturesSelector).data;\n  const picturesHits = picturesData.hits;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  //   RESPONSIVE HACK\n  const screenExtraLarge = useMediaQuery(theme.breakpoints.only('xl'));\n  const screenLarge = useMediaQuery(theme.breakpoints.only('lg'));\n  const screenMedium = useMediaQuery(theme.breakpoints.only('md'));\n  const screenSmall = useMediaQuery(theme.breakpoints.only('sm'));\n  const screenExtraSmall = useMediaQuery(theme.breakpoints.only('xs'));\n  const screenNarrow = useMediaQuery('(max-width:340px)');\n\n  const getScreenWidth = () => {\n    if (screenExtraLarge) {\n      return 5;\n    }\n    if (screenLarge) {\n      return 4;\n    }\n    if (screenMedium) {\n      return 3;\n    }\n    if (screenSmall) {\n      return 2;\n    }\n    if (screenExtraSmall) {\n      return 1;\n    }\n    if (screenNarrow) {\n      return 1;\n    }\n    return 1;\n  };\n  //   END of RESPONSIVE HACK\n\n  return (\n    <div className={classes.root}>\n      <GridList\n        cellHeight={260}\n        cols={getScreenWidth()}\n        spacing={1}\n        className={classes.gridList}\n      >\n        {picturesHits?.map((tile) => (\n          <GridListTile key={tile.id} cols={1} rows={1}>\n            <img src={tile.webformatURL} alt=\"none\" />\n            <GridListTileBar\n              title=\"title\"\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label=\"star title\" className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport { CircularProgress, Backdrop, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport const LoadingPage: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\nexport default LoadingPage;\n","import axios from 'axios';\n\nexport const API_KEY = '21006895-bfaaa89652a3d7d5175478097';\n\nexport const instance = axios.create({\n  baseURL: 'https://pixabay.com/api',\n});\n","import { API_KEY, instance } from './api';\n\nexport const pictureAPI = {\n  fetchImages(pictureSearch: string, page: number) {\n    return instance.get(\n      `/?key=${API_KEY}&q=${pictureSearch}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`,\n    );\n  },\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { pictureAPI } from '../../@api/picture-api';\nimport { PicturesDataType } from '../../@types';\n\nconst picturesInitialState = {\n  data: {\n    total: 0,\n    totalHits: 0,\n    hits: [],\n  } as PicturesDataType,\n  loading: false,\n  page: 1,\n};\n\n// delay\nfunction waitforme(milisec: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve('');\n    }, milisec);\n  });\n}\n\nexport const picturesTC = createAsyncThunk(\n  'pictures/picturesTC',\n  async (param: { pictureSearch: string; page: number }, thunkAPI) => {\n    thunkAPI.dispatch(setLoading(true));\n    try {\n      await waitforme(1000);\n      const res = await pictureAPI.fetchImages(param.pictureSearch, param.page);\n      return { data: res.data };\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err.response.data);\n    } finally {\n      thunkAPI.dispatch(setLoading(false));\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'pictures',\n  initialState: picturesInitialState,\n  reducers: {\n    setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    incrementPage(state) {\n      state.page += 1;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(picturesTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        // state.data = action.payload.data;\n        state.data.total = action.payload.data.total;\n        state.data.totalHits = action.payload.data.totalHits;\n        state.data.hits.push(...action.payload.data.hits);\n      }\n    });\n  },\n});\n\nexport const picturesReducer = slice.reducer;\nexport const { setLoading, incrementPage } = slice.actions;\n","import { Box, Button, Container } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PrimarySearchAppBar } from '../@components/AppBar/AppBar';\nimport ImageGallery from '../@components/ImageGallery';\nimport LoadingPage from '../@components/UI/LoadingPage';\nimport { picturesSelector } from '../@store/pictures/selectors';\nimport { incrementPage, picturesTC } from '../@store/pictures/slice';\n\nexport const AppContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const { loading: picturesLoading, page } = useSelector(picturesSelector);\n\n  useEffect(() => {\n    dispatch(picturesTC({ pictureSearch: '', page }));\n  }, [dispatch, page]);\n\n  const handleLoadMore = () => {\n    dispatch(incrementPage());\n  };\n\n  return (\n    <div className=\"App\">\n      <Box mb={2}>\n        <PrimarySearchAppBar />\n      </Box>\n      <Container maxWidth=\"lg\">\n        {picturesLoading && <LoadingPage />}\n        <ImageGallery />\n        <Box my={3} textAlign=\"center\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLoadMore()}\n          >\n            Load more\n          </Button>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n","import {\n  LocationResponseType,\n  CurrentWeatherResponseType,\n  AstroResponseType,\n  DayResponseType,\n  HourResponseType,\n} from '../@types';\nimport { API_KEY, instance } from './api';\n\nexport const forecastAPI = {\n  dailyWeather(days: number, lat: number, lon: number) {\n    return instance.get<ForecastType>(\n      `/forecast.json?key=${API_KEY}&q=${lat},${lon}&days=${days}`,\n    );\n  },\n};\n\nexport type ForecastType = {\n  location: LocationResponseType;\n  current: CurrentWeatherResponseType;\n  forecast: ForecastDayInfoType;\n};\n\nexport type ForecastDayInfoType = {\n  forecastday: Array<ForecastdayResponseType>;\n};\n\nexport type ForecastdayResponseType = {\n  date: string;\n  day: DayResponseType;\n  astro: AstroResponseType;\n  hour: Array<HourResponseType>;\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { forecastAPI, ForecastdayResponseType } from '../../@api/forecast-api';\n\nconst forecastInitialState = {\n  forecastday: [] as Array<ForecastdayResponseType>,\n};\n\nexport const getForecastTC = createAsyncThunk(\n  'forecast/getForecast',\n  async (param: { days: number; lat: number; lon: number }, thunkAPI) => {\n    try {\n      const res = await forecastAPI.dailyWeather(\n        param.days,\n        param.lat,\n        param.lon,\n      );\n      return { forecastday: res.data.forecast.forecastday };\n    } catch (err) {\n      // Use `err.response.data` as `action.payload` for a `rejected` action,\n      // by explicitly returning it using the `rejectWithValue()` utility\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'forecast',\n  initialState: forecastInitialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getForecastTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.forecastday = action.payload.forecastday;\n      }\n    });\n  },\n});\n\nexport const forecastReducer = slice.reducer;\n","import { LocationResponseType, CurrentWeatherResponseType } from '../@types';\nimport { API_KEY, instance } from './api';\n\nexport const currentWeatherApi = {\n  currentWeather(lat: number, lon: number) {\n    return instance.get<CurrectWeatherType>(\n      `/current.json?key=${API_KEY}&q=${lat},${lon}`,\n    );\n  },\n};\n\nexport type CurrectWeatherType = {\n  location: LocationResponseType;\n  current: CurrentWeatherResponseType;\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { currentWeatherApi } from '../../@api/currentWeather-api';\nimport { CurrentWeatherResponseType, LocationResponseType } from '../../@types';\n\nconst currentWeatherInitialState = {\n  lat: 0, // lat: 51.5341714,\n  lon: 0, // lon: 33.3767724,\n  location: {} as LocationResponseType,\n  currentWeather: {} as CurrentWeatherResponseType,\n};\n\nexport const getUserCoordinatesTC = createAsyncThunk(\n  'currentWeather/getUserCoordinatesTC',\n  (undf, thunkAPI) => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      thunkAPI.dispatch(\n        userCoordinatesAC({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        }),\n      );\n    });\n  },\n);\n\nexport const getCurrentWeatherTC = createAsyncThunk(\n  'currentWeather/getCurrentWeather',\n  async (param: { lat: number; lon: number }, thunkAPI) => {\n    try {\n      const res = await currentWeatherApi.currentWeather(param.lat, param.lon);\n      thunkAPI.dispatch(setLocationAC(res.data.location));\n      return { currentWeather: res.data.current };\n    } catch (err) {\n      // Use `err.response.data` as `action.payload` for a `rejected` action,\n      // by explicitly returning it using the `rejectWithValue()` utility\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'currentWeather',\n  initialState: currentWeatherInitialState,\n  reducers: {\n    userCoordinatesAC(\n      state,\n      action: PayloadAction<{ lat: number; lon: number }>,\n    ) {\n      state.lat = action.payload.lat;\n      state.lon = action.payload.lon;\n    },\n    setLocationAC(state, action: PayloadAction<LocationResponseType>) {\n      state.location = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getCurrentWeatherTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.currentWeather = action.payload.currentWeather;\n      }\n    });\n  },\n});\n\nexport const currentWeatherReducer = slice.reducer;\nexport const { userCoordinatesAC, setLocationAC } = slice.actions;\n","import { searchPlaceResponseType } from '../@types';\nimport { API_KEY, instance } from './api';\n\nexport const searchAPI = {\n  place(place: string) {\n    return instance.get<searchPlaceResponseType[]>(\n      `/search.json?key=${API_KEY}&q=${place}`,\n    );\n  },\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { searchAPI } from '../../@api/search-api';\nimport { searchPlaceResponseType } from '../../@types';\n\nconst searchInitialState = {\n  data: [] as Array<searchPlaceResponseType>,\n};\n\nexport const searchTC = createAsyncThunk(\n  'search/searchTC',\n  async (place: string, thunkAPI) => {\n    try {\n      const res = await searchAPI.place(place);\n      return { data: res.data };\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err.response.data);\n    }\n  },\n);\n\nexport const slice = createSlice({\n  name: 'search',\n  initialState: searchInitialState,\n  reducers: {\n    clearData(state) {\n      state.data = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(searchTC.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.data = action.payload.data;\n      }\n    });\n  },\n});\n\nexport const searchReducer = slice.reducer;\nexport const { clearData: clearDataAC } = slice.actions;\n","import { combineReducers } from 'redux';\nimport { forecastReducer } from './forecast/slice';\nimport { currentWeatherReducer } from './current-weather/slice';\nimport { searchReducer } from './search/slice';\nimport { picturesReducer } from './pictures/slice';\n\nexport const rootReducer = combineReducers({\n  currentWeather: currentWeatherReducer,\n  forecast: forecastReducer,\n  pictures: picturesReducer,\n  search: searchReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import { createBrowserHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './@store/index';\n// export const history = createBrowserHistory();\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // blacklist: ['filter'], // will not be persisted\n  whitelist: ['filter'], // will be persisted\n};\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const middleware = [...getDefaultMiddleware(), logger];\n// https://github.com/rt2zz/redux-persist/issues/988#issuecomment-552242978\nconst middleware = [\n  ...getDefaultMiddleware({\n    // immutableCheck: true,\n    thunk: true,\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  // devTools: process.env.NODE_ENV === 'development',\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Open Sans\", sans-serif',\n    fontSize: 14,\n    // fontWeightLight: 300,\n    // fontWeightRegular: 400,\n    // fontWeightMedium: 500,\n  },\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { AppContainer } from './#/App';\nimport { store, persistor } from './configureStore';\nimport LoadingPage from './@components/UI/LoadingPage';\nimport { theme } from './@themes/theme';\nimport reportWebVitals from './reportWebVitals';\n\n// All styles\nimport './@assets/styles/index.scss';\n\n// Open Source typefaces\nimport 'typeface-roboto';\n\nconst rootEl = document.getElementById('root');\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<LoadingPage />} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <AppContainer />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  rootEl,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}